import java.nio.charset.StandardCharsets

plugins {
	// IDE
	id 'idea'

	// Language
	id 'java'
	id 'java-library'

	// Utility
	id 'jacoco'
	id 'info.solidsoft.pitest' version '1.15.0'
	id 'com.diffplug.spotless' version '6.25.0'
	id 'org.sonarqube' version '6.0.1.5171'
}

group = 'io.github.suppierk'
version = '1.0.0'

repositories {
	mavenCentral()
}

// Centralized dependency versions definition
ext {
	set('jakartaVersion', '2.0.1')

	set('jUnitVersion', '5.11.4')
	set('equalsVerifierVersion', '3.17.5')
}

dependencies {
	// https://mvnrepository.com/artifact/jakarta.inject/jakarta.inject-api
	api group: 'jakarta.inject', name: 'jakarta.inject-api', version: jakartaVersion

	// https://mvnrepository.com/artifact/org.junit/junit-bom
	testImplementation enforcedPlatform(group: 'org.junit', name: 'junit-bom', version: jUnitVersion)

	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter'

	// https://mvnrepository.com/artifact/nl.jqno.equalsverifier/equalsverifier-nodep
	testImplementation group: 'nl.jqno.equalsverifier', name: 'equalsverifier-nodep', version: equalsVerifierVersion
}

test {
	useJUnitPlatform()
}

java {
	def version = JavaVersion.VERSION_11

	sourceCompatibility = version.toString()
	targetCompatibility = version.toString()

	toolchain {
		languageVersion = JavaLanguageVersion.of(version.toString())
	}
}

// Configure several tasks additionally for Gradle
test {
	useJUnitPlatform()

	// Report is always generated after tests run
	finalizedBy jacocoTestReport
}

// Enable Spotless code formatting rules
spotless {
	java {
		target '**/src/*/java/**/*.java'

		// Aligns with Intellij IDEA default settings
		toggleOffOn('@formatter:off', '@formatter:on')

		googleJavaFormat()
	}

	groovyGradle {
		target '**/*.gradle'

		greclipse()
	}
}

// Configure several tasks additionally for Gradle
tasks.withType(Copy).configureEach {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = StandardCharsets.UTF_8.name()
	dependsOn(spotlessJavaCheck)
}

pitest {
	targetClasses = ['io.github.suppierk.*']
	threads = 4
	outputFormats = ['HTML']
	timestampedReports = false
	junit5PluginVersion = '1.2.1'
}

sonar {
	properties {
		property 'sonar.projectKey', 'SuppieRK_inject'
		property 'sonar.organization', 'suppierk'
		property 'sonar.host.url', 'https://sonarcloud.io'
	}
}